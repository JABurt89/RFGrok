Redesign Workout Logger Component
Where: client/src/components/workout-logger.tsx
What: Simplify to show one suggestion, allow editing, and enhance logging with rest timers.
How:
Fetch a single suggestion using useQuery.
Display it in a clean card with an "Edit" button and a "Start Workout" button.
Implement a logging interface with rest timers.
Code:
tsx

Collapse

Wrap

Copy
import { useState } from "react";
import { useQuery } from "@tanstack/react-query";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { apiRequest } from "@/lib/queryClient";

export default function WorkoutLogger({ exerciseId }: { exerciseId: number }) {
  const [isWorkoutActive, setIsWorkoutActive] = useState(false);
  const [editing, setEditing] = useState(false);
  const [currentSet, setCurrentSet] = useState(0);
  const [loggedReps, setLoggedReps] = useState<number[]>([]);

  const { data: suggestion } = useQuery({
    queryKey: ["/api/workout-suggestion", exerciseId],
    queryFn: () => apiRequest("GET", `/api/workout-suggestion?exerciseId=${exerciseId}`).then(res => res.json()),
  });

  const handleStartWorkout = () => setIsWorkoutActive(true);
  const handleEdit = () => setEditing(true);
  const logReps = (reps: number) => {
    setLoggedReps([...loggedReps, reps]);
    setCurrentSet(currentSet + 1);
    // Start rest timer logic here (implement separately)
  };

  if (isWorkoutActive) {
    return (
      <div className="p-4">
        <Card>
          <CardHeader>
            <CardTitle>Logging Set {currentSet + 1}</CardTitle>
          </CardHeader>
          <CardContent>
            <p>Target: {suggestion.weight}kg x {suggestion.reps} reps</p>
            <Input type="number" placeholder="Enter reps" onChange={(e) => logReps(Number(e.target.value))} />
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="p-4 max-w-md mx-auto">
      <Card className="shadow-md">
        <CardHeader>
          <CardTitle>Bench Press - Setup</CardTitle>
        </CardHeader>
        <CardContent>
          {suggestion && (
            <div className="space-y-2">
              <p>Top Set: {suggestion.weight}kg ({suggestion.reps} reps)</p>
              {suggestion.setWeights?.map((weight, idx) => idx > 0 && (
                <p key={idx}>Set {idx}: {weight}kg</p>
              ))}
              <Button onClick={handleEdit} variant="outline">Edit</Button>
            </div>
          )}
        </CardContent>
        <CardFooter>
          <Button onClick={handleStartWorkout} className="w-full">Start Workout</Button>
        </CardFooter>
      </Card>
      {/* Add editing modal here if editing is true */}
    </div>
  );
}